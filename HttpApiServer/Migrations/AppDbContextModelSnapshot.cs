// <auto-generated />
using System;
using HttpApiServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HttpApiServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("HttpModels.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CartId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("HttpModels.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("HttpModels.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CartId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItem");
                });

            modelBuilder.Entity("HttpModels.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca761852-7dc7-40aa-aaa2-d0df861800e2"),
                            Name = "Смарфоны"
                        },
                        new
                        {
                            Id = new Guid("af0b1a81-c3ab-42a7-b34c-1c9aa3a1029d"),
                            Name = "USB накопители"
                        },
                        new
                        {
                            Id = new Guid("ea87ecbe-c441-45ce-9fac-437bc57a7251"),
                            Name = "Ноутбуки"
                        },
                        new
                        {
                            Id = new Guid("609dd6fb-c2d1-45ad-8050-27170b0ac7d7"),
                            Name = "Наушники"
                        },
                        new
                        {
                            Id = new Guid("25f53408-1920-46b2-ab1e-0528bd0982d3"),
                            Name = "Игровые консоли"
                        },
                        new
                        {
                            Id = new Guid("879f10dc-ce53-4e63-a306-88b8681898fb"),
                            Name = "Телевизоры"
                        });
                });

            modelBuilder.Entity("HttpModels.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UrlImage")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("886e8f86-3829-45b1-af91-8fd626e4e80b"),
                            CategoryId = new Guid("ca761852-7dc7-40aa-aaa2-d0df861800e2"),
                            Name = "Смартфон Google Pixel 5a",
                            Price = 560m,
                            Quantity = 20,
                            UrlImage = "https://cdn1.ozone.ru/s3/multimedia-3/wc250/6237328203.jpg"
                        },
                        new
                        {
                            Id = new Guid("6e9052d4-f23d-406e-a439-525424573974"),
                            CategoryId = new Guid("af0b1a81-c3ab-42a7-b34c-1c9aa3a1029d"),
                            Name = "USB накопитель Samsung",
                            Price = 30m,
                            Quantity = 35,
                            UrlImage = "https://cdn1.ozone.ru/multimedia/wc1200/1026248251.jpg"
                        },
                        new
                        {
                            Id = new Guid("f2bb411f-be16-4cb4-b47e-d1008a9f12b1"),
                            CategoryId = new Guid("ea87ecbe-c441-45ce-9fac-437bc57a7251"),
                            Name = "Ноутбук Lenovo IdeaPad 4 15IX5P6",
                            Price = 830.50m,
                            Quantity = 15,
                            UrlImage = "https://cdn1.ozone.ru/s3/multimedia-7/wc1200/6166994971.jpg"
                        },
                        new
                        {
                            Id = new Guid("5e105978-2e29-4e1b-aeec-fca3d6027ec5"),
                            CategoryId = new Guid("609dd6fb-c2d1-45ad-8050-27170b0ac7d7"),
                            Name = "Наушники Sony WH-CH56030NW",
                            Price = 130.60m,
                            Quantity = 25,
                            UrlImage = "https://cdn1.ozone.ru/s3/multimedia-r/wc1200/6179635779.jpg"
                        },
                        new
                        {
                            Id = new Guid("89596c2a-ef81-4ce5-a096-b7a49472cce4"),
                            CategoryId = new Guid("25f53408-1920-46b2-ab1e-0528bd0982d3"),
                            Name = "Microsoft Xbox Series X",
                            Price = 985m,
                            Quantity = 2,
                            UrlImage = "https://cdn1.ozone.ru/s3/multimedia-l/wc1200/6232471137.jpg"
                        },
                        new
                        {
                            Id = new Guid("6f51aa7a-d936-4549-a708-d4f624516376"),
                            CategoryId = new Guid("879f10dc-ce53-4e63-a306-88b8681898fb"),
                            Name = "Телевизор Sony KD50X81J 50",
                            Price = 1000.89m,
                            Quantity = 15,
                            UrlImage = "https://cdn1.ozone.ru/s3/multimedia-n/wc1200/6068732087.jpg"
                        });
                });

            modelBuilder.Entity("HttpModels.CartItem", b =>
                {
                    b.HasOne("HttpModels.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HttpModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("HttpModels.Product", b =>
                {
                    b.HasOne("HttpModels.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HttpModels.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("HttpModels.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
