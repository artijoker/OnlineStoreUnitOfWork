@page "/registration"

@inject IToastService _toastService
@inject ShopClient _client
@inject NavigationManager _navigationManager

<h3>Регистрация</h3>
<EditForm Model="_model" OnValidSubmit="RegisteringNewAccount">
    <DataAnnotationsValidator />
    <div class="mt-3">Email*:</div>
    <div class="row">
        <InputText class="col-4" @bind-Value="_model.Email" required minlength="5"/>
    </div>
    <div>Логин*:</div>
    <div class="row">
        <InputText class="col-4" @bind-Value="_model.Login" required minlength="5" />
    </div>
    <div class="mt-3">Пароль*:</div>
    <div class="row">
        <InputText class="col-4" @bind-Value="_model.Password" required minlength="6"/>
    </div>
    <div class="row mt-3">
        <input class="col-2" type="submit" name="submit" value="Регистрация" />
    </div>

    <ValidationSummary />

</EditForm>


@code {
    private readonly AccountRegistrationModel _model = new();

    private async void RegisteringNewAccount()
    {
        var responseModel = await _client.Registration(_model);

        if (responseModel is not null)
        {
            if (responseModel.Succeeded)
                _navigationManager.NavigateTo("/successful_registration");
            else
                _toastService.ShowError(responseModel.Message, "Ошибка!");
        }
        else
            _toastService.ShowError(
                "Нет ответа от сервера. Попробуйте презагрузить страницу или зарегистрироваться позже", 
                "Ошибка!"
            );
    }
}