@page "/catalog"

@inject IToastService _toastService
@inherits AppComponentBase

<PageTitle>Catalog</PageTitle>
<h3>Каталог товаров</h3>
@if (_products is not null)
{
    <table>
        <thead>
            <tr>
                <th></th>
                <th style="padding:15px;">Название</th>
                <th style="padding:15px;">Категория</th>
                <th style="padding:15px; text-align:right;">Цена</th>
                <th style="padding:15px; text-align:right;">Количество</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in _products)
            {
                <tr>
                    <ProductItem Product="item" />
                    <td style="padding:15px" class="textPositionRight">@item.Quantity</td>
                    <td style="padding:15px;">
                        <button class="btn" @onclick="@(() => AddToCart(item))">
                            Купить
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <i>Загрузка...</i>
}


@code
{
    private IReadOnlyList<Product>? _products;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        try
        {
            _products = await ShopClient.GetProducts();
        }
        catch (HttpRequestException)
        {
            _toastService.ShowError("Не удалось загрузить список товаров.", "Ошибка!");
        }
    }

    private async Task AddToCart(Product product)
    {


        try
        {
            var response = await ShopClient.AddToCart(product);

            if (response is not null)
            {

                _toastService.ShowInfo("Добавлен в корзину.", product.Name);
            }
            else
            {
                _toastService.ShowError(
                "Нет ответа от сервера. Попробуйте презагрузить страницу", 
                "Ошибка!"
            );
            }

        }
        catch (HttpRequestException)
        {
           _toastService.ShowError("Это действие доступно только авторизованным пользователям.", "Ошибка!");
        }
    }
}